{"version":3,"sources":["../../src/factories/createCreateCreateObjectTypeMetadata.js"],"names":["createCreateCreateObjectTypeMetadata","t","createCreateObjectTypeMetadata","typeForAnnotation","createObjectTypeMetadata","annotation","properties","types","length","props","i","l","property","key","value","val","push","objectProperty","identifier","name","objectExpression"],"mappings":";;;;;AAAe,SAASA,oCAAT,CAA8CC,CAA9C,EAAiD;AAC5D,SAAO,SAASC,8BAAT,CAAwCC,iBAAxC,EAA2D;AAC9D,WAAO,SAASC,wBAAT,CAAkCC,UAAlC,EAA8C;AACjD,UAAIC,aAAaD,WAAWC,UAA5B;AACA,UAAMC,QAAQF,WAAWE,KAAzB;;AAEA,UAAI,CAACD,UAAD,IAAeC,KAAf,IAAwBA,MAAMC,MAAlC,EAA0C;AACtCF,qBAAaC,MAAMA,MAAMC,MAAN,GAAe,CAArB,EAAwBF,UAArC;AACH;;AACD,UAAIA,UAAJ,EAAgB;AACZ,YAAMG,QAAQ,EAAd;;AAEA,aAAK,IAAIC,IAAI,CAAR,EAAWC,IAAIL,WAAWE,MAA/B,EAAuCE,IAAIC,CAA3C,EAA8CD,GAA9C,EAAmD;AAC/C,cAAME,WAAWN,WAAWI,CAAX,CAAjB;AAD+C,cAExCG,GAFwC,GAE1BD,QAF0B,CAExCC,GAFwC;AAAA,cAEnCC,KAFmC,GAE1BF,QAF0B,CAEnCE,KAFmC;;AAG/C,cAAI,CAACD,GAAD,IAAQ,CAACC,KAAb,EAAoB;AAChB;AACH;;AAED,cAAMC,MAAMZ,kBAAkBW,KAAlB,CAAZ;;AACA,cAAIC,GAAJ,EAAS;AACLN,kBAAMO,IAAN,CAAWf,EAAEgB,cAAF,CACPhB,EAAEiB,UAAF,CAAaL,IAAIM,IAAjB,CADO,EAEPJ,GAFO,CAAX;AAIH;AACJ;;AACD,eAAOd,EAAEmB,gBAAF,CAAmBX,KAAnB,CAAP;AACH;;AACD,aAAOR,EAAEiB,UAAF,CAAa,QAAb,CAAP;AACH,KA5BD;AA6BH,GA9BD;AA+BH","file":"createCreateCreateObjectTypeMetadata.js","sourcesContent":["export default function createCreateCreateObjectTypeMetadata(t) {\n    return function createCreateObjectTypeMetadata(typeForAnnotation) {\n        return function createObjectTypeMetadata(annotation) {\n            let properties = annotation.properties\n            const types = annotation.types\n\n            if (!properties && types && types.length) {\n                properties = types[types.length - 1].properties\n            }\n            if (properties) {\n                const props = []\n\n                for (let i = 0, l = properties.length; i < l; i++) {\n                    const property = properties[i]\n                    const {key, value} = property\n                    if (!key || !value) {\n                        break\n                    }\n\n                    const val = typeForAnnotation(value)\n                    if (val) {\n                        props.push(t.objectProperty(\n                            t.identifier(key.name),\n                            val\n                        ))\n                    }\n                }\n                return t.objectExpression(props)\n            }\n            return t.identifier('Object')\n        }\n    }\n}\n"]}