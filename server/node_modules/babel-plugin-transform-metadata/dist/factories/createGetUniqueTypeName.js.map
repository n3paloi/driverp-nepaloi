{"version":3,"sources":["../../src/factories/createGetUniqueTypeName.js"],"names":["escapedSep","replace","IS_RELATIVE","RegExp","createGetUniqueTypeName","strategy","getUniqueTypeName","pathValue","name","suffix","test","getDefaultUniqueTypeName"],"mappings":";;;;;AAAA;;AAEA,IAAMA,aAAa,UAAIC,OAAJ,CAAY,6BAAZ,EAA2C,MAA3C,CAAnB;;AAEA,IAAMC,cAAc,IAAIC,MAAJ,CAAW,QAAQH,UAAnB,CAApB;;AAEe,SAASI,uBAAT,CAAiCC,QAAjC,EAAoE;AAC/E,WAASC,iBAAT,CAA2BC,SAA3B,EAAsCC,IAAtC,EAA4C;AACxC,QAAMC,SAASP,YAAYQ,IAAZ,CAAiBH,SAAjB,IACT,oBAASA,SAAT,CADS,GAETA,SAFN;AAIA,WAAOC,QAAQC,SAAU,MAAMA,MAAhB,GAA0B,EAAlC,CAAP;AACH;;AAED,WAASE,wBAAT,CAAkCJ,SAAlC,EAA6CC,IAA7C,EAAmD;AAC/C,WAAOA,IAAP;AACH;;AAED,UAAQH,QAAR;AACI,SAAK,UAAL;AACI,aAAOC,iBAAP;;AACJ,SAAK,UAAL;AACI,aAAOK,wBAAP;;AACJ;AACI,aAAOA,wBAAP;AANR;AAQH","file":"createGetUniqueTypeName.js","sourcesContent":["import {sep, basename} from 'path'\n\nconst escapedSep = sep.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&')\n\nconst IS_RELATIVE = new RegExp('\\\\.' + escapedSep)\n\nexport default function createGetUniqueTypeName(strategy: 'fullPath' | 'typeName') {\n    function getUniqueTypeName(pathValue, name) {\n        const suffix = IS_RELATIVE.test(pathValue)\n            ? basename(pathValue)\n            : pathValue\n\n        return name + (suffix ? ('.' + suffix) : '')\n    }\n\n    function getDefaultUniqueTypeName(pathValue, name) {\n        return name\n    }\n\n    switch (strategy) {\n        case 'fullPath':\n            return getUniqueTypeName\n        case 'typeName':\n            return getDefaultUniqueTypeName\n        default:\n            return getDefaultUniqueTypeName\n    }\n}\n"]}